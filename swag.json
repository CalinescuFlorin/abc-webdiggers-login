{"openapi":"3.0.1","info":{"title":"OpenApi specification - ABC","description":"OpenApi documentation for ABC Backend","contact":{"name":"ABC Support","email":"abc.backend.t1@gmail.com"},"license":{"name":"TDB","url":"TBD"},"version":"0.1"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"security":[{"bearerAuth":[]}],"paths":{"/api/v1/user/users":{"get":{"tags":["User Management"],"summary":"Fetch list of users","description":"Returns a list of all accounts and their details","operationId":"getUsers","responses":{"200":{"description":"Fetch list of users","content":{"application/hal+json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}}}},"put":{"tags":["User Management"],"summary":"Change user role by email address","description":"Change an user's role, given their email address","operationId":"updateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserRequest"}}},"required":true},"responses":{"200":{"description":"User role changed successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}},"400":{"description":"Error occurred while updating role / account not found","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}},"delete":{"tags":["User Management"],"summary":"Delete user by email","description":"Delete an user, given their email address","operationId":"deleteUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteUserRequest"}}},"required":true},"responses":{"200":{"description":"User deleted successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}},"400":{"description":"Error occurred while deleting user / account not found","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/user/users/{id}":{"put":{"tags":["User Management"],"summary":"Change user role by Id","description":"Change an user's role, given their Id","operationId":"updateUser_1","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserRoleEmailRequest"}}}},"responses":{"200":{"description":"User role changed successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}},"400":{"description":"Error occurred while updating role / account not found","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}},"delete":{"tags":["User Management"],"summary":"Delete user by Id","description":"Delete an user, given their Id","operationId":"deleteUser_1","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"User deleted successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}},"400":{"description":"Error occurred while deleting user / account not found","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/password_change/confirm_forgotten":{"post":{"tags":["Password Change"],"summary":"Change the password if the user forgets it.","operationId":"confirmForgottenPassword","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordForgottenRequest"}}}},"responses":{"200":{"description":"Success","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}},"400":{"description":"Failure","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}}}}},"/api/v1/password_change/confirm_change":{"post":{"tags":["Password Change"],"summary":"Change the password if the user remembers the old password.","operationId":"confirmChangedPassword","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordChangeRequest"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}},"400":{"description":"Failure","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}}}}},"/api/v1/password_change/change":{"post":{"tags":["Password Change"],"summary":"Send a password change email to the user.","operationId":"sendChangePasswordMail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordChangeEmailRequest"}}}},"responses":{"200":{"description":"Success","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}},"400":{"description":"Failure","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/PasswordChangeResponse"}}}}}}},"/api/v1/auth/verify":{"post":{"tags":["Authentication"],"summary":"Endpoint for 2FA code verification","description":"Authenticates an user into their account. Returns the token for authentication.","operationId":"verify2FACode","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VerificationRequest"}}},"required":true},"responses":{"200":{"description":"Code is correct, user is logged in successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TFAVerifyResponse"}}}},"400":{"description":"Error occurred while verifying 2FA code","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/auth/register":{"post":{"tags":["Authentication"],"summary":"Endpoint for account registration","description":"Creates an account for the platform. If \"enabled2FA\" is true, it will also return a QR image for an authenticator app. The account will be disabled until the user activates it via email.","operationId":"registerUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}},"required":true},"responses":{"200":{"description":"Account created successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/AuthenticationResponse"}}}},"400":{"description":"Error occurred while creating account","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/auth/authenticate":{"post":{"tags":["Authentication"],"summary":"Endpoint for login","description":"Authenticates an user into their account. Returns details about them, such as their name and role, and also returns an access token. If they have 2FA enabled, no token is returned, as it has to be received from the </auth/verify> endpoint.","operationId":"authenticateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRequest"}}},"required":true},"responses":{"200":{"description":"Credentials are correct, user is logged in successfully","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/AuthenticationResponse"}}}},"400":{"description":"Error occurred while logging into account","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/visitor":{"get":{"tags":["User Access Test"],"operationId":"testController","responses":{"200":{"description":"OK","content":{"application/hal+json":{"schema":{"type":"string"}}}}}}},"/api/v1/bio":{"get":{"tags":["Biologist Access Test"],"operationId":"testController_1","responses":{"200":{"description":"OK","content":{"application/hal+json":{"schema":{"type":"string"}}}}}}},"/api/v1/auth/confirm":{"get":{"tags":["Authentication"],"summary":"Endpoint for account email confirmation","description":"Confirms the email address and activates the account","operationId":"confirmEmail","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Account has been activated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailConfirmationResponse"}}}},"400":{"description":"Error occurred while confirming account","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicResponse"}}}}}}},"/api/v1/arheo":{"get":{"tags":["Archaeologist Access Test"],"operationId":"testController_2","responses":{"200":{"description":"OK","content":{"application/hal+json":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"GrantedAuthority":{"type":"object","properties":{"authority":{"type":"string"}}},"User":{"type":"object","properties":{"id":{"type":"integer","description":"User id (auto-generated)","format":"int32","example":101},"firstName":{"type":"string","description":"User first name","example":"Nick"},"lastName":{"type":"string","description":"User last name","example":"Smith"},"password":{"type":"string","description":"User password","example":"password123"},"email":{"type":"string","description":"User email","example":"text@gmail.com"},"role":{"type":"string","description":"User role","example":"ADMIN / USER / ARCHAEOLOGIST / BIOLOGIST"},"enabled2FA":{"type":"boolean","description":"If the user wants to use 2FA for authentication or not (default is false)","example":false},"codeFor2FA":{"type":"string","description":"Code used by user for 2FA (default is null string)","example":"123456 / 2FA code"},"locked":{"type":"boolean","description":"If the user account is locked / blocked (default is false)","example":false},"enabled":{"type":"boolean","description":"If the user account is enabled, done by email verification (default is false)","example":false},"username":{"type":"string"},"authorities":{"type":"array","items":{"$ref":"#/components/schemas/GrantedAuthority"}},"accountNonLocked":{"type":"boolean"},"credentialsNonExpired":{"type":"boolean"},"accountNonExpired":{"type":"boolean"}}},"UpdateUserRequest":{"type":"object","properties":{"email":{"type":"string","description":"User email","example":"text@gmail.com"},"role":{"type":"string","description":"User role","example":"ADMIN / USER / ARCHAEOLOGIST / BIOLOGIST"}}},"BasicResponse":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"success / fail"},"message":{"type":"string","description":"Detailed message explaining what happened","example":"Response message"}}},"UpdateUserRoleEmailRequest":{"type":"object","properties":{"role":{"type":"string","description":"User's role"}}},"PasswordForgottenRequest":{"type":"object","properties":{"email":{"type":"string","description":"User's email associated with the request"},"token":{"type":"string","description":"User-inputted token from email","nullable":true},"newPassword":{"type":"string","description":"New password chosen by user","nullable":true}}},"PasswordChangeResponse":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"success / fail"},"message":{"type":"string","description":"Detailed message explaining what happened","example":"success / fail"}}},"PasswordChangeRequest":{"type":"object","properties":{"email":{"type":"string","description":"User's email associated with the request"},"token":{"type":"string","description":"User-inputted token from email","nullable":true},"newPassword":{"type":"string","description":"New password chosen by user","nullable":true},"oldPassword":{"type":"string","description":"Old password remembered by user","nullable":true}}},"PasswordChangeEmailRequest":{"type":"object","properties":{"email":{"type":"string","description":"User's email associated with the request"}}},"TFAVerifyResponse":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"success / fail"},"message":{"type":"string","description":"Detailed message explaining what happened","example":"Validated 2FA code. / <error>"},"token":{"type":"string","description":"JWT Authentication token","example":"<token> / <error>"},"enabled2FA":{"type":"boolean","description":"User has 2 Factor Authentication enabled","example":false}}},"VerificationRequest":{"type":"object","properties":{"email":{"type":"string","description":"User email","example":"text@gmail.com"},"code":{"type":"string","description":"Code for verification at log in","example":"132465"}}},"RegisterRequest":{"type":"object","properties":{"firstName":{"type":"string","description":"First name of the user","example":"Nick"},"lastName":{"type":"string","description":"Last name of the user","example":"Smith"},"password":{"type":"string","description":"Password chosen by the user","example":"password123"},"email":{"type":"string","description":"Email chosen by the user","example":"test@gmail.com"},"enabled2FA":{"type":"boolean","description":"If the user wants to use 2FA for authentication or not","example":false}}},"AuthenticationResponse":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"success / fail / 2fa_pending"},"message":{"type":"string","description":"Message to send as response to authentication request","example":"Account created / Logged in successfully / <error>"},"token":{"type":"string","description":"Token generated for the user if it's a successful log in","example":"ilhgrueiwjdifehjow"},"role":{"type":"string","description":"Role of the logged in user","example":"ADMIN / USER / ARCHAEOLOGIST / BIOLOGIST"},"firstName":{"type":"string","description":"First name of the logged in user","example":"Nick"},"lastName":{"type":"string","description":"Last name of the logged in user","example":"Smith"},"enabled2FA":{"type":"boolean","description":"If the user wants to use 2FA for authentication","example":false},"secretImageUri":{"type":"string","description":"A QR image generated for authentication","example":"data: image/png: ... "}}},"AuthenticationRequest":{"type":"object","properties":{"email":{"type":"string","description":"User email used at log in","example":"text@gmail.com"},"password":{"type":"string","description":"User password used at log in","example":"password12345"}}},"EmailConfirmationResponse":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"success / fail"},"message":{"type":"string","description":"Detailed message explaining what happened","example":"Email confirmed / <error>"}}},"DeleteUserRequest":{"type":"object","properties":{"email":{"type":"string","description":"User email","example":"text@gmail.com"}}}},"securitySchemes":{"bearerAuth":{"type":"http","description":"JWT auth description","in":"header","scheme":"bearer"}}}}